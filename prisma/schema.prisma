// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Catechist {
  id       String   @id @default(uuid())
  name     String
  birthday DateTime
  phone    String
  address  String

  receivedBaptism      Boolean
  receivedEucharist    Boolean
  receivedConfirmation Boolean
  receivedMarriage     Boolean?

  email         String? @unique
  password_hash String?

  classroom    Classroom? @relation(fields: [classroom_id], references: [id])
  classroom_id String?

  @@map("catechists")
}

model Catechizing {
  id                     String   @id @default(uuid())
  name                   String
  birthday               DateTime
  age                    Decimal?
  address                String
  personWithSpecialNeeds Boolean?

  hasReceivedBaptism   Boolean
  hasReceivedEucharist Boolean
  hasReceivedMarriage  Boolean @default(false)

  payments Payment[]
  parents  Parent[]

  classroom    Classroom? @relation(fields: [classroom_id], references: [id])
  classroom_id String?

  @@map("catechizings")
}

model Parent {
  id      String @id @default(uuid())
  name    String
  phone   String
  kinship String

  catechizing    Catechizing @relation(fields: [catechizing_id], references: [id])
  catechizing_id String

  @@map("parents")
}

model Classroom {
  id         String   @id @default(uuid())
  roomNumber Decimal? @unique
  segment    String
  startedAt  DateTime @default(now())

  catechists   Catechist[]
  catechizings Catechizing[]

  @@map("classrooms")
}

model Payment {
  id                String  @id @default(uuid())
  toBePaid          Float   @default(150)
  hasReceivedTickeT Boolean @default(false)

  catechizing    Catechizing @relation(fields: [catechizing_id], references: [id])
  catechizing_id String      @unique

  installments Installment[]

  @@map("payments")
}

model Installment {
  id      String   @id @default(uuid())
  payedAt DateTime @default(now())
  value   Float

  payment    Payment @relation(fields: [payment_id], references: [id])
  payment_id String

  @@map("installments")
}
